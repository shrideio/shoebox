version: "3.5"


services:

    packages-db:
      image: postgres:12-alpine
      container_name: packages-db
      hostname: packages-db
      restart: always
      volumes:
        - packages-db-data:/var/lib/postgresql/data
      environment:
        - POSTGRES_DB=${PROGET_POSTGRESQL_DATABASE}
        - POSTGRES_USER=${PROGET_POSTGRESQL_USER}
        - POSTGRES_PASSWORD=${PROGET_POSTGRESQL_PASSWORD}
      command: postgres -c shared_buffers=256MB -c max_connections=200
      ports:
        - ${PROGET_POSTGRESQL_PORT}:5432
      networks: 
        - packages-network

    packages:
      image: inedo/proget:5.2.29
      container_name: packages
      hostname: packages
      restart: always
      environment:
        - PROGET_DATABASE=Host=packages-db; Database=${PROGET_POSTGRESQL_DATABASE}; Username=${PROGET_POSTGRESQL_USER}; Password=${PROGET_POSTGRESQL_PASSWORD}; MinPoolSize=1; MaxPoolSize=20;
      volumes:
        - packages-packages:/var/proget/packages
        - packages-extensions:/var/proget/extensions
        - packages-config:/usr/share/Inedo/SharedConfig
      ports:
        - ${PROGET_HTTP_PORT}:80
      networks:
        - packages-network
        - proxy-network
      depends_on:
        - packages-db
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=proxy-network"
        - "traefik.http.routers.packages.service=packages"
        - "traefik.http.routers.packages.rule=Host(`packages.${YOUR_DOMAIN}`)"
        - "traefik.http.routers.packages.entrypoints=websecure"
        - "traefik.http.routers.packages.tls.certresolver=proxyresolver"
        - "traefik.http.services.packages.loadbalancer.server.port=80"


networks:

   packages-network:
      name: packages-network
      driver: bridge

   proxy-network:
      external: true


volumes:

    packages-packages:
      driver_opts:
        type: none
        device: ${PROGET_PACKAGES}
        o: bind

    packages-extensions:
      driver_opts:
        type: none
        device: ${PROGET_EXTENSIONS}
        o: bind

    packages-config:
      driver_opts:
        type: none
        device: ${PROGET_CONFIG}
        o: bind

    packages-db-data:
      driver_opts:
        type: none
        device: ${PROGET_POSTGRESQL_DATA}
        o: bind
