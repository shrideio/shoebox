version: "3.5"


services:

    ci-db:
      image: mysql:latest
      container_name: ci-db
      hostname: ci-db
      restart: always
      environment:
        - MYSQL_DATABASE=${DRONE_MYSQL_DATABASE}
        - MYSQL_ROOT_PASSWORD=${DRONE_MYSQL_ROOT_PASSWORD}
      ports:
        - ${DRONE_MYSQL_PORT}:3306
      networks:
        - ci-network
      volumes:
        - drone-mysql-data:/var/lib/mysql

    ci-secret:
      image: drone/vault
      container_name: ci-secret
      hostname: ci-secret
      restart: always
      environment:
        - SECRET_KEY=${DRONE_SECRET_KEY}
        - VAULT_ADDR=${VAULT_ADDR}
        - VAULT_TOKEN=${VAULT_TOKEN}
        - VAULT_TOKEN_RENEWAL=720h
        - VAULT_TOKEN_TTL=720h
        - DRONE_DEBUG=true
      networks:
        - ci-network
      ports:
        - ${DRONE_VAULT_PLUGIN_PORT}:3000

    ci:
      image: drone/drone
      container_name: ci
      hostname: ci
      restart: always
      environment:
        - DRONE_USER_CREATE=${DRONE_USER_CREATE}
        - DRONE_GIT_USERNAME=${DRONE_GIT_USERNAME}
        - DRONE_GIT_PASSWORD=${DRONE_GIT_PASSWORD}
        - DRONE_GIT_ALWAYS_AUTH=true
        - DRONE_GOGS_SERVER=${DRONE_GOGS_SERVER}
        - DRONE_SERVER_HOST=${DRONE_SERVER_HOST}
        - DRONE_SERVER_PROTO=https
        - DRONE_TLS_AUTOCERT=false
        - DRONE_RUNNER_NETWORKS-ci-network
        - DRONE_RUNNER_CAPACITY=${DRONE_RUNNER_CAPACITY}
        - DRONE_DATABASE_DRIVER=mysql
        - DRONE_DATABASE_DATASOURCE=root:${DRONE_MYSQL_ROOT_PASSWORD}@tcp(ci-db:3306)/${DRONE_MYSQL_DATABASE}?parseTime=true
        - DRONE_SECRET_ENDPOINT=http://ci-secret:3000
        - DRONE_SECRET_SECRET=${DRONE_SECRET_KEY}
      ports:
        - ${DRONE_HTTP_PORT}:80
      networks:
        - ci-network
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - drone-data:/data
      depends_on:
        - ci-db
        - ci-secret


networks:
    ci-network:
      name: ci-network
      driver: bridge
      

volumes:

    drone-data:
      driver_opts:
        type: none
        device: ${DRONE_DATA}
        o: bind

    drone-mysql-data:
      driver_opts:
        type: none
        device: ${DRONE_MYSQL_DATA}
        o: bind