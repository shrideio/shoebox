version: "3.5"


services:

  vault-db:
    image: consul:latest
    container_name: vault-db
    hostname: vault-db
    restart: always
    volumes:
      - vault-db-config:/consul/config
      - vault-db-data:/consul/data
    ports:
      - ${CONSUL_PORT}:8500
    networks:
      - vault-network
    command: agent -server -bind 0.0.0.0 -client 0.0.0.0 -bootstrap-expect 1

  vault:
    image: vault:latest
    container_name: vault
    hostname: vault
    restart: always
    depends_on:
      - vault-db
    volumes:
      - vault-config:/vault/config
      - vault-logs:/vault/file
    ports:
      - 8300:8300
      - 8600:8600
      - 8600:8600/udp
      - ${VAULT_PORT}:8200
    networks:
      - proxy-network
      - vault-network
    cap_add:
      - IPC_LOCK
    command: server
    depends_on:
      - vault-db
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy-network"
      - "traefik.http.routers.vault.service=vault"
      - "traefik.http.routers.vault.rule=Host(`vault.${YOUR_DOMAIN}`)"
      - "traefik.http.routers.vault.entrypoints=websecure"
      - "traefik.http.routers.vault.tls.certresolver=proxyresolver"
      - "traefik.http.services.vault.loadbalancer.server.port=8200"


networks:

    vault-network:
      name: vault-network
      driver: bridge

    proxy-network:
      external: true


volumes:

    vault-config:
      driver_opts:
        type: none
        device: ${VAULT_CONFIG}
        o: bind

    vault-logs:
      driver_opts:
        type: none
        device: ${VAULT_LOGS}
        o: bind

    vault-db-config:
      driver_opts:
        type: none
        device: ${VAULT_CONSUL_CONFIG}
        o: bind
        
    vault-db-data:	
      driver_opts:	
        type: none	
        device: ${VAULT_CONSUL_DATA}	
        o: bind